// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  password         String
  role             Role              @default(USER)
  profilePicture   String?
  createdAt        DateTime          @default(now())
  articles         Article[]
  comments         Comment[]
  reactions        CommentReaction[]
  resetToken       String?
  resetTokenExpiry DateTime?
}

model Article {
  id        Int       @id @default(autoincrement())
  title     String
  category  String
  published Boolean   @default(false) // <-- NEW FIELD
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  blocks    Json
  author    User?     @relation(fields: [authorId], references: [id])
  authorId  Int?
  comments  Comment[]
}

model Comment {
  id        Int               @id @default(autoincrement())
  content   String
  likes     Int               @default(0)
  dislikes  Int               @default(0)
  createdAt DateTime          @default(now())
  article   Article           @relation(fields: [articleId], references: [id])
  articleId Int
  parent    Comment?          @relation("CommentToComment", fields: [parentId], references: [id])
  parentId  Int?
  children  Comment[]         @relation("CommentToComment")
  user      User?             @relation(fields: [userId], references: [id])
  userId    Int?
  reactions CommentReaction[]
}

model CommentReaction {
  id        Int          @id @default(autoincrement())
  user      User         @relation(fields: [userId], references: [id])
  userId    Int
  comment   Comment      @relation(fields: [commentId], references: [id])
  commentId Int
  type      ReactionType
  createdAt DateTime     @default(now())

  @@unique([userId, commentId]) // One reaction per user per comment
}

enum ReactionType {
  LIKE
  DISLIKE
}
